{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/display-super/display-super.component.css","webpack:///./src/app/display-super/display-super.component.html","webpack:///./src/app/display-super/display-super.component.ts","webpack:///./src/app/display/display.component.css","webpack:///./src/app/display/display.component.html","webpack:///./src/app/display/display.component.ts","webpack:///./src/app/front/front.component.css","webpack:///./src/app/front/front.component.html","webpack:///./src/app/front/front.component.ts","webpack:///./src/app/navigationbar/navigationbar.component.css","webpack:///./src/app/navigationbar/navigationbar.component.html","webpack:///./src/app/navigationbar/navigationbar.component.ts","webpack:///./src/app/services/httpsevice.service.ts","webpack:///./src/app/services/loginservice.ts","webpack:///./src/app/useredit/useredit.component.css","webpack:///./src/app/useredit/useredit.component.html","webpack:///./src/app/useredit/useredit.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navigationbar (logout)=\\\"logout()\\\" *ngIf=\\\"authorized && type!=undefined\\\" [type]=\\\"type\\\"> </app-navigationbar>\\n<router-outlet></router-outlet> \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component} from '@angular/core';\nimport { HttpRequestService } from './services/httpsevice.service';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from './services/loginservice';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  authorized:boolean=false;\n  type:string;\n  constructor(private router:Router ,private httpservice:HttpRequestService,private authorize:AuthenticationService){\n    this.authorize.authenticatedEvent.subscribe((data)=>{\n      this.type=data.role;\n      this.authorized=true;\n    }); \n  }\n  \n  ngOnInit()\n  {\n    this.authorized = this.authorize.getToken.token==undefined?false:true;\n  }\n  logout()\n  {\n    this.authorized=true;\n    this.type=undefined;\n    this.authorize.destroySession();\n    this.router.navigate(['']);\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {AuthGuard} from './auth.guard';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { FrontComponent } from './front/front.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NavigationbarComponent } from './navigationbar/navigationbar.component';\nimport { DisplayComponent } from './display/display.component';\nimport { DisplaySuperComponent } from './display-super/display-super.component';\nimport { UsereditComponent } from './useredit/useredit.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {Routes,RouterModule} from '@angular/router';\nimport {HttpRequestService} from './services/httpsevice.service';\nimport {AuthenticationService} from './services/loginservice';\nvar appRoutes: Routes =[\n {path:'dashboard',component:DashboardComponent\n ,canActivate:[AuthGuard]\n},\n {path:'',component:FrontComponent},\n {path:'adminuser',component:DisplayComponent},\n {path:'superadmin',component:DisplaySuperComponent}\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    FrontComponent,\n    DashboardComponent,\n    NavigationbarComponent,\n    DisplayComponent,\n    DisplaySuperComponent,\n    UsereditComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n ],\n  providers: [HttpRequestService,AuthenticationService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n  constructor(private auth:AuthenticationService){\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {AuthenticationService} from './services/loginservice';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  private access:boolean=false;\n  constructor(private authentication:AuthenticationService)\n  {\n  \n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return  this.authentication.getToken.id!=undefined?true:false;\n   \n  }\n}\n","module.exports = \".profile\\n{\\n    background-color: lightgray;\\n    width:100%;\\n    height:100%;\\n}\\n.flip-card {\\n    background-color: transparent;\\n    width: 300px;\\n    height: 300px;\\n    -webkit-perspective: 1000px;\\n            perspective: 1000px;\\n  }\\n.flip-card-inner {\\n    position: relative;\\n    width: 100%;\\n    height: 100%;\\n    text-align: center;\\n    transition: -webkit-transform 0.6s;\\n    transition: transform 0.6s;\\n    transition: transform 0.6s, -webkit-transform 0.6s;\\n    -webkit-transform-style: preserve-3d;\\n            transform-style: preserve-3d;\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\\n  }\\n.flip-card:hover .flip-card-inner {\\n    -webkit-transform: rotateY(180deg);\\n            transform: rotateY(180deg);\\n  }\\n.flip-card-front, .flip-card-back {\\n    position: absolute;\\n    width: 100%;\\n    height: 100%;\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n  }\\n.flip-card-front {\\n    background-color: #bbb;\\n    color: black;\\n  }\\n.flip-card-back {\\n    background-color: #2980b9;\\n    color: white;\\n    -webkit-transform: rotateY(180deg);\\n            transform: rotateY(180deg);\\n  }\"","module.exports = \"<div class=\\\"container\\\">\\n <div class=\\\"row\\\">\\n   <div *ngIf=\\\"userInfo.role=='user'\\\" class=\\\"alert alert-success\\\">HI {{userInfo.firstname}} {{userInfo.lastname}}!!You are valued customer</div>\\n   <div class=\\\"col-xs-4 col-sm-4 col-md-4 col-lg-4\\\">\\n    <div class=\\\"flip-card\\\">\\n      <div class=\\\"flip-card-inner\\\">\\n        <div class=\\\"flip-card-front\\\">\\n          <img src=\\\"../../assets/userprofile.png\\\" alt=\\\"Avatar\\\" style=\\\"width:300px;height:300px;\\\">\\n        </div>\\n        <div class=\\\"flip-card-back\\\">\\n          <h1>{{userInfo.firstname.toUpperCase()}} {{userInfo.lastname.toUpperCase()}}</h1> \\n          <p>{{userInfo.username.toLowerCase()}}</p> \\n          <p>{{userInfo.role}}</p>\\n          <p> {{ userInfo.email }}</p>\\n        </div>\\n      </div>\\n    </div>\\n    \\n   </div>\\n   \\n   <div class=\\\"col-xs-8 col-sm-8 col-md-8 col-lg-8 \\\">\\n      <div class=\\\"container profile\\\">\\n\\n        <h1 class=\\\"text-primary \\\">Profile Details</h1>\\n        <span><h3>Name:{{userInfo.firstname.toUpperCase()}} {{userInfo.lastname.toUpperCase()}}</h3></span>\\n        <span><h3>FirstName:{{userInfo.firstname.toUpperCase()}} </h3></span>\\n        <span><h3>LastName:{{userInfo.lastname.toUpperCase()}}</h3></span>\\n        <span><h3>Username:{{userInfo.username.toLowerCase()}}</h3></span>\\n        <span><h3>Role:{{userInfo.role.toUpperCase()}}</h3></span>\\n        <span><h3>Email:{{userInfo.email}}</h3></span>\\n        <span><h3>Email:{{userInfo.cdate}}</h3></span>\\n  </div>\\n   </div>\\n   \\n </div>  \\n</div>\\n\\n\\n \"","import { Component, OnInit } from '@angular/core';\nimport { HttpRequestService } from '../services/httpsevice.service';\nimport {AuthenticationService} from '../services/loginservice';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  private userInfo={};\n  constructor(private httphandle:HttpRequestService,private credentials:AuthenticationService){\n    \n  }\nngOnInit() {\n  this.userInfo=this.credentials.userInfo;\n  \n}\n\n\n  \n\n}\n","module.exports = \".container-fluid\\n{\\n    padding:10px;\\n}\\n*{\\n    padding  : 0px;\\n    padding-left:0px;\\n    margin-top:0px;\\n}\\n/* Full-width input fields */\\ninput[type=text], input[type=password] {\\n    width: 200px;\\n    padding: 15px;\\n    margin: 5px 0 22px 0;\\n    display: block;\\n    border: none;\\n    background: #f1f1f1;\\n}\\n/* Add a background color when the inputs get focus */\\ninput[type=text]:focus, input[type=password]:focus {\\n    background-color: #ddd;\\n    outline: none;\\n    width: 300px;\\n    height: inherit;\\n}\\n/* Set a style for all buttons */\\n.button1 {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n    width: 100%;\\n    opacity: 0.9;\\n}\\n.button1:hover {\\n    opacity:1;\\n}\\n/* Extra styles for the cancel button */\\n.cancelbtn {\\n    padding: 14px 20px;\\n    background-color: #f44336;\\n}\\n/* Float cancel and signup buttons and add an equal width */\\n.cancelbtn, .signupbtn {\\n  float: left;\\n  width: 50%;\\n}\\n/* Add padding to container elements */\\n.container {\\n    padding: 16px;\\n}\\n/* The Modal (background) */\\n.modal {\\n    display: block; /* Hidden by default */\\n    position: fixed; /* Stay in place */\\n    z-index: 1; /* Sit on top */\\n    left: 0;\\n    top: 0;\\n    width: 100%; /* Full width */\\n    height: 100%; /* Full height */\\n    overflow: auto; /* Enable scroll if needed */\\n    background-color: #474e5d;\\n    padding-top: 50px;\\n}\\n/* Modal Content/Box */\\n.modal-content {\\n    background-color: #fefefe;\\n    margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\\n    border: 1px solid #888;\\n    width: 100%; /* Could be more or less, depending on screen size */\\n}\\n/* Style the horizontal ruler */\\nhr {\\n    border: 1px solid #f1f1f1;\\n    margin-bottom: 25px;\\n}\\n/* The Close Button (x) */\\n.close {\\n    position: absolute;\\n    right: 35px;\\n    top: 15px;\\n    font-size: 40px;\\n    font-weight: bold;\\n    color: #f1f1f1;\\n}\\n.close:hover,\\n.close:focus {\\n    color: #f44336;\\n    cursor: pointer;\\n}\\n/* Clear floats */\\n.clearfix::after {\\n    content: \\\"\\\";\\n    clear: both;\\n    display: table;\\n}\\n/* Change styles for cancel button and signup button on extra small screens */\\n@media screen and (max-width: 300px) {\\n    .cancelbtn, .signupbtn {\\n       width: 100%;\\n    }\\n}\\n.vertical-menu {\\n    height:100%;\\n    width: 100%;\\n    background-color: blanchedalmond;\\n    \\n  \\n}\\n.vertical-menu a {\\n    background-color: #eee;\\n    color: black;\\n    display: block;\\n    padding: 12px;\\n    text-decoration: none;\\n}\\n.vertical-menu a:hover {\\n    background-color: #ccc;\\n}\\n.vertical-menu a.active {\\n    background-color: #4CAF50;\\n    color: white;\\n}\\n.button {\\n  border-radius: 4px;\\n  background-color:lightskyblue;\\n  border: none;\\n  color: #FFFFFF;\\n  text-align: center;\\n  font-size: 18px;\\n  padding: 3px;\\n  width: 150px;\\n  transition: all 0.5s;\\n  cursor: pointer;\\n  margin: 5px;\\n  position: relative;\\n  right:0px;\\n}\\n.button span {\\n  cursor: pointer;\\n  display: inline-block;\\n  position: relative;\\n  transition: 0.5s;\\n}\\n.button span:after {\\n  content: '\\\\00bb';\\n  position: absolute;\\n  opacity: 0;\\n  top: 0;\\n  right: -20px;\\n  transition: 0.5s;\\n}\\n.button:hover span {\\n  padding-right: 25px;\\n}\\n.button:hover span:after {\\n  opacity: 1;\\n  right: 0;\\n}\\ninput.ng-valid{\\n    border-bottom: 4px solid green; \\n }\\ninput.ng-invalid{\\n     border-bottom: 4px solid red; \\n  }\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n <div class=\\\"row\\\">\\n<div class=\\\"col-md-2\\\">\\n\\n     <div class=\\\"vertical-menu\\\">\\n        <button class=\\\"button\\\" (click)=\\\"addUser($event)\\\"><span>Add Admin </span></button>\\n      <a [id]=\\\"adminList.indexOf(admin)\\\" (click)=\\\"displayAdmin($event)\\\" *ngFor=\\\"let admin of adminList\\\">{{admin.firstname}}</a>\\n     </div>\\n\\n     </div>\\n     \\n   <div class=\\\"col-md-10\\\" *ngFor=\\\"let admin of adminList\\\">\\n        <ng-template [ngIf]=\\\"selectedAdmin==adminList.indexOf(admin)\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-2\\\">\\n                    <img src=\\\"../../assets/user.png\\\" class=\\\"img img-responsive img-circle\\\">\\n                  </div>\\n                  <div class=\\\"col-md-10\\\">\\n                    \\n                   \\n             <button title=\\\"Edit form\\\" style=\\\"float:right;padding: 2px;\\\" *ngIf=\\\"!editAdmin\\\" (click)=\\\"editAdmin=!editAdmin\\\" class=\\\"btn btn-info\\\">Edit</button>\\n               <span  title=\\\"Close Form\\\" *ngIf=\\\"editAdmin\\\" (click)=\\\"editAdmin=!editAdmin\\\" style=\\\"float:right;font-size:50px;\\n               cursor: pointer;\\n               \\\">&times;</span> \\n               <div *ngIf=\\\"!editAdmin\\\"> \\n                  <h3 class=\\\"text-primary\\\">Admin Details</h3>\\n                  <div *ngFor=\\\"let field of objectKeys(adminList[selectedAdmin])\\\">\\n                   <span *ngIf=\\\"field!='UID' && field!='cdate' && field!='role'\\\">\\n                       <p  class=\\\"myfont\\\">{{field.toUpperCase()}}:\\n                         <span *ngIf=\\\"!editField\\\">{{adminList[selectedAdmin][field]}}</span> \\n                       </p>\\n                       \\n                   </span>  \\n                   \\n                   </div>\\n               </div>\\n               <app-useredit (dbEvent)=\\\"perform($event)\\\" [toEdit]=\\\"adminList[selectedAdmin]\\\" *ngIf=\\\"editAdmin\\\"></app-useredit> \\n                </div>\\n                </div>\\n                \\n                <app-display (adminDeleteEvent)=\\\"destroyAdmin($event)\\\"  [id]=\\\"admin.UID\\\"></app-display>\\n             </div> \\n         </ng-template>\\n     </div>\\n\\n   \\n  </div>\\n</div>\\n\\n\\n<div class=\\\"modal\\\" *ngIf=\\\"add\\\">\\n  <span (click)=\\\"addUser()\\\" class=\\\"close\\\" title=\\\"Close Modal\\\">&times;</span>\\n  <form class=\\\"modal-content\\\" #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"addNewUser(userForm.value)\\\">\\n    <div class=\\\"container\\\">\\n      <h1>ADD USER</h1>\\n      <p>Please fill in this form to create a new user.</p>\\n      <hr>\\n      <label for=\\\"firstname\\\"><b>Firstname</b></label>\\n      <input ngModel #fnameRef=\\\"ngModel\\\"  type=\\\"text\\\" placeholder=\\\"Enter Firstname\\\" name=\\\"firstname\\\" required>\\n      <div [hidden]=\\\"fnameRef.valid || fnameRef.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Firstname cannot be empty   \\n      </div>\\n      <label for=\\\"lastname\\\"><b>Lastname</b></label>\\n      <input ngModel #lnameRef=\\\"ngModel\\\"  type=\\\"text\\\" placeholder=\\\"Enter Lastname\\\" name=\\\"lastname\\\" required>\\n      <div [hidden]=\\\"lnameRef.valid || lnameRef.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Lastname cannot be empty   \\n      </div>\\n      <label for=\\\"username\\\"><b>Username</b></label>\\n      <input #unameRef=\\\"ngModel\\\" [(ngModel)]=\\\"username\\\" (keyup)=\\\"haze($event)\\\" type=\\\"text\\\" placeholder=\\\"Enter Username\\\" pattern=\\\"[a-z]*\\\" name=\\\"username\\\" required>\\n       <div  [hidden]=\\\"unameRef.valid || unameRef.pristine || !unameRef.errors.pattern\\\" class=\\\"alert alert-danger\\\">\\n        Username cannot be empty  and should only consist of lowercase and should be atleast 5 characters \\n      </div>\\n      <div [hidden]=\\\"usernameStatus\\\"  class=\\\"alert alert-danger\\\">\\n        Sorry this username exists in our database\\n      </div>\\n      <label for=\\\"Password\\\"><b>Password</b></label>\\n      <input #passRef=\\\"ngModel\\\" ngModel type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"password\\\" required>\\n      <div [hidden]=\\\"passRef.valid || passRef.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Password cannot be empty   \\n      </div>\\n    \\n      <label for=\\\"email\\\"><b>Email</b></label>\\n      <input #eRef=\\\"ngModel\\\" ngModel  type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" required>\\n      <div [hidden]=\\\"eRef.valid || eRef.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Email cannot be empty   \\n      </div>\\n\\n    <div class=\\\"clearfix\\\">\\n        <button type=\\\"button\\\" (click)=\\\"addUser($event)\\\" class=\\\" button cancelbtn\\\">Cancel</button>\\n        <button [disabled]=\\\"!(userForm.form.valid && usernameStatus)\\\" type=\\\"submit\\\" class=\\\" button signupbtn\\\">Add Admin</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\\n   \"","import { Component, OnInit, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport {AuthenticationService} from '../services/loginservice';\nimport {HttpRequestService} from '../services/httpsevice.service';\n\n@Component({\n  selector: 'app-display-super',\n  templateUrl: './display-super.component.html',\n  styleUrls: ['./display-super.component.css']\n})\nexport class DisplaySuperComponent implements OnInit {\n  \n  public objectKeys=Object.keys;\n  public editAdmin:boolean=false;\n  private usernameList:string[]=undefined;\n  public suscription:boolean;\n  public adminList:any;\n  public selectedAdmin:any;\n  public usernameStatus:boolean=true;\n  public username:string;\n  public add:boolean=false;\n  constructor(private httpHandle:HttpRequestService,private credentials:AuthenticationService){\n    this.adminList= [\n      {\n        uid : 6,\n        firstname:'Abhiyan',\n        lastname :'Timilsina',\n        username :'abhiyan',\n        role : 'admin'\n      }\n    ];\n    this.selectedAdmin=0;\n   }\n\n   displayAdmin(event:any)\n   {\n     this.selectedAdmin=event.target.getAttribute('id');\n   }\n  ngOnInit() {\n    var url = `users/2/${this.credentials.getToken.id}`;\n    this.suscription=true;\n    this.httpHandle.getData1(url,this.credentials.getToken);\n    this.httpHandle.callComplete1.subscribe((data)=>{\n      this.adminList = data.result;\n     \n      });\n  }\n  addUser(event)\n  {\n    this.add=!this.add;\n  }\n  addNewUser(formValue)\n  {\n    \n    this.add=!this.add;\n   formValue.sid=this.credentials.getToken.id;\n   formValue.role=\"admin\";\n    this.httpHandle.postRequestWithCredentials(\"users\",{\n      id : this.credentials.getToken.id,\n      token: this.credentials.getToken.token\n    },formValue).subscribe(()=>{\n      var url = `users/2/${this.credentials.getToken.id}`;\n      this.httpHandle.getData1(url,this.credentials.getToken);\n    this.httpHandle.callComplete1.subscribe((data)=>{\n    \n      this.adminList = data.result;\n      });\n    });\n  }\n\n  destroyAdmin(event)\n  { \n     this.adminList.forEach(element => {\n        if(event.id==element.UID)\n        {\n       \n          this.adminList.splice(this.adminList.indexOf(element),1);\n        }\n     });\n  }\n  haze(event)\n  {\n\n    this.usernameStatus=true;\n    if(this.usernameList==undefined)\n    this.httpHandle.getUserList('users/0/1',{\n      id: this.credentials.getToken.id,\n      token : this.credentials.getToken.token\n    }).subscribe((data:any)=>{\n        \n         this.usernameList=data.result.map(element=>element.username);\n          if(this.usernameList.indexOf(this.username)!=-1)\n            this.usernameStatus=false;\n      });\n    else\n     {\n      if(this.usernameList.indexOf(this.username)!=-1)\n      this.usernameStatus=false;\n     }\n  }\n\n  public perform(event)\n  {\n    this.editAdmin=false;\n    this.httpHandle.postRequestWithCredentials(\"modifyUser\",{\n      id : this.credentials.getToken.id,\n      token: this.credentials.getToken.token\n    },event).subscribe(()=>{\n      var url = `users/2/${this.credentials.getToken.id}`;\n      this.httpHandle.getData1(url,this.credentials.getToken);\n    this.httpHandle.callComplete1.subscribe((data)=>{\n    \n      this.adminList = data.result;\n      });\n    });\n  }\n\n}\n","module.exports = \"table {\\n    border-collapse: collapse;\\n    border-spacing: 0;\\n    width: 1000px;\\n    border: 1px solid #ddd;\\n    overflow-x:scroll;\\n}\\nth, td {\\n    text-align: left;\\n    padding: 8px;\\n}\\n.mybtn{\\n    font-size: 12px;\\n    padding:2px;\\n    margin:5px;\\n}\\nthead tr {\\n     background-color:purple;\\n     color:white;\\n }\\ntbody tr:nth-child(even){background-color:lightgray}\\n.loader {\\n    position: absolute;\\n    top:40%;\\n    left:45%;\\n    border: 16px solid #f3f3f3;\\n    border-radius: 50%;\\n    border-top: 16px solid #3498db;\\n    width: 120px;\\n    height: 120px;\\n    -webkit-animation: spin 2s linear infinite; /* Safari */\\n    animation: spin 2s linear infinite;\\n    \\n  }\\n/* Safari */\\n@-webkit-keyframes spin {\\n    0% { -webkit-transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); }\\n  }\\n@keyframes spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n  }\\n.loading\\n  {\\n      position: absolute;\\n      top:30%;\\n      left:50%;\\n  }\\n/* Full-width input fields */\\ninput[type=text], input[type=password] {\\n    width: 200px;\\n    padding: 15px;\\n    margin: 5px 0 22px 0;\\n    display: block;\\n    border: none;\\n    background: #f1f1f1;\\n}\\n/* Add a background color when the inputs get focus */\\ninput[type=text]:focus, input[type=password]:focus {\\n    background-color: #ddd;\\n    outline: none;\\n    width: 300px;\\n    height: inherit;\\n}\\n/* Set a style for all buttons */\\n.button {\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    cursor: pointer;\\n    width: 100%;\\n    opacity: 0.9;\\n}\\n.button:hover {\\n    opacity:1;\\n}\\n/* Extra styles for the cancel button */\\n.cancelbtn {\\n    padding: 14px 20px;\\n    background-color: #f44336;\\n}\\n/* Float cancel and signup buttons and add an equal width */\\n.cancelbtn, .signupbtn {\\n  float: left;\\n  width: 50%;\\n}\\n/* Add padding to container elements */\\n.container {\\n    padding: 16px;\\n}\\n/* The Modal (background) */\\n.modal {\\n    display: block; /* Hidden by default */\\n    position: fixed; /* Stay in place */\\n    z-index: 1; /* Sit on top */\\n    left: 0;\\n    top: 0;\\n    width: 100%; /* Full width */\\n    height: 100%; /* Full height */\\n    overflow: auto; /* Enable scroll if needed */\\n    background-color: #474e5d;\\n    padding-top: 50px;\\n}\\n/* Modal Content/Box */\\n.modal-content {\\n    background-color: #fefefe;\\n    margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\\n    border: 1px solid #888;\\n    width: 100%; /* Could be more or less, depending on screen size */\\n}\\n/* Style the horizontal ruler */\\nhr {\\n    border: 1px solid #f1f1f1;\\n    margin-bottom: 25px;\\n}\\n/* The Close Button (x) */\\n.close {\\n    position: absolute;\\n    right: 35px;\\n    top: 15px;\\n    font-size: 40px;\\n    font-weight: bold;\\n    color: #f1f1f1;\\n}\\n.close:hover,\\n.close:focus {\\n    color: #f44336;\\n    cursor: pointer;\\n}\\n/* Clear floats */\\n.clearfix::after {\\n    content: \\\"\\\";\\n    clear: both;\\n    display: table;\\n}\\n/* Change styles for cancel button and signup button on extra small screens */\\n@media screen and (max-width: 300px) {\\n    .cancelbtn, .signupbtn {\\n       width: 100%;\\n    }\\n}\\ninput.ng-valid{\\n    border-bottom: 4px solid green; \\n }\\ninput.ng-invalid{\\n     border-bottom: 4px solid red; \\n  }\\n  \"","module.exports = \"<span title=\\\"Close Form\\\" style=\\\"font-size: 30px;float: right;cursor: pointer; background-color: burlywood;border-radius: 50%;\\\" *ngIf=\\\"updateFlag\\\" (click)=\\\"updateFlag=false\\\" >&times;</span>\\n\\n<div class=\\\"container\\\">\\n  <div *ngIf=\\\"dataLoaded && !updateFlag\\\"  class=\\\"row\\\">\\n  <div style=\\\"position:absolute;\\n  right:0px;\\\">\\n   <button t=\\\"del\\\"  [id]=\\\"adminId\\\" *ngIf=\\\"adminId!=credentials.getToken.id\\\" (click)=\\\"delete($event)\\\"  [ngClass]=\\\"(userList.length==0)?'enabled':'disabled'\\\" class=\\\"btn btn-danger\\\">DELETE ADMIN</button> \\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"addUser($event)\\\" style=\\\"width:auto;\\\">Add User</button>\\n  </div>\\n  \\n    <br>\\n    <br>\\n      <table *ngIf=\\\"userList.length else nouser\\\" class=\\\"table table-striped table-dark\\\">\\n          <thead>\\n               <tr>\\n                 <th>#</th>\\n                 <th>Firstname</th>\\n                 <th>Lastname</th>\\n                 <th>Username</th>\\n                 <th>Role</th>\\n                 <th>Email</th>\\n                 <th>Date</th>\\n                 <th>Actions</th>\\n               </tr>\\n             </thead>\\n             <tbody>\\n              \\n          <tr *ngFor=\\\"let user of userList\\\" class=\\\"table-info\\\">\\n                 <th scope=\\\"row\\\">{{user.UID}}</th>\\n                 <td>{{user.firstname}}</td>\\n                 <td>{{user.lastname}}</td>\\n                 <td>{{user.username}}</td>\\n                 <td>{{user.role}}</td>\\n                 <td>{{user.email}}</td>\\n                 <td>{{user.cdate}}</td>\\n                \\n                 <td>\\n                     <button [id]=\\\"userList.indexOf(user)\\\" (click)=\\\"update($event)\\\" class=\\\"btn btn-primary mybtn\\\">Update</button>\\n                     <button [id]=\\\"user.UID\\\" (click)=\\\"delete($event)\\\" class=\\\"btn btn-danger mybtn \\\">Delete</button>\\n                 </td>  \\n           </tr>\\n            \\n             </tbody>\\n             </table>\\n            <ng-template #nouser>\\n             <h1>NO USERS FOR THIS ADMIN WERE FOUND</h1>\\n            </ng-template>\\n            </div>\\n  <div *ngIf=\\\"!dataLoaded\\\">\\n    Loading...\\n    <div   class=\\\"loader\\\">\\n  \\n    </div>\\n  </div>\\n</div>\\n\\n<app-useredit (dbEvent)=\\\"perform($event)\\\" [toEdit]=\\\"toUpdate\\\" *ngIf=\\\"updateFlag\\\"></app-useredit>\\n<div class=\\\"modal\\\" *ngIf=\\\"add\\\">\\n  <span (click)=\\\"addUser()\\\" class=\\\"close\\\" title=\\\"Close Modal\\\">&times;</span>\\n  <form class=\\\"modal-content\\\" #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"addNewUser(userForm.value)\\\">\\n    <div class=\\\"container\\\">\\n      <h1>ADD USER</h1>\\n      <p>Please fill in this form to create a new user.</p>\\n      <hr>\\n      <label for=\\\"firstname\\\"><b>Firstname</b></label>\\n      <input ngModel #fnameRef=\\\"ngModel\\\"  type=\\\"text\\\" placeholder=\\\"Enter Firstname\\\" name=\\\"firstname\\\" required>\\n      <div [hidden]=\\\"fnameRef.valid || fnameRef.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Firstname cannot be empty   \\n      </div>\\n      <label for=\\\"lastname\\\"><b>Lastname</b></label>\\n      <input ngModel #lnameRef=\\\"ngModel\\\"  type=\\\"text\\\" placeholder=\\\"Enter Lastname\\\" name=\\\"lastname\\\" required>\\n      <div [hidden]=\\\"lnameRef.valid || lnameRef.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Lastname cannot be empty   \\n      </div>\\n      <label for=\\\"username\\\"><b>Username</b></label>\\n      <input #unameRef=\\\"ngModel\\\" [(ngModel)]=\\\"username\\\" (keyup)=\\\"haze($event)\\\" type=\\\"text\\\" placeholder=\\\"Enter Username\\\" pattern=\\\"[a-z]*\\\" name=\\\"username\\\" required>\\n       <div  [hidden]=\\\"unameRef.valid || unameRef.pristine || !unameRef.errors.pattern\\\" class=\\\"alert alert-danger\\\">\\n        Username cannot be empty  and should only consist of lowercase and should be atleast 5 characters \\n      </div>\\n      <div [hidden]=\\\"usernameStatus\\\"  class=\\\"alert alert-danger\\\">\\n        Sorry this username exists in our database\\n      </div>\\n      <label for=\\\"Password\\\"><b>Password</b></label>\\n      <input #passRef=\\\"ngModel\\\" ngModel type=\\\"password\\\" placeholder=\\\"Enter Password\\\" name=\\\"password\\\" required>\\n      <div [hidden]=\\\"passRef.valid || passRef.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Password cannot be empty   \\n      </div>\\n    \\n      <label for=\\\"email\\\"><b>Email</b></label>\\n      <input #eRef=\\\"ngModel\\\" ngModel  type=\\\"text\\\" placeholder=\\\"Enter Email\\\" name=\\\"email\\\" required>\\n      <div [hidden]=\\\"eRef.valid || eRef.pristine\\\" class=\\\"alert alert-danger\\\">\\n        Email cannot be empty   \\n      </div>\\n\\n    <div class=\\\"clearfix\\\">\\n        <button type=\\\"button\\\" (click)=\\\"addUser($event)\\\" class=\\\" button cancelbtn\\\">Cancel</button>\\n        <button [disabled]=\\\"!(userForm.form.valid && usernameStatus)\\\" type=\\\"submit\\\" class=\\\" button signupbtn\\\">Add User</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\\n\\n\\n\\n\"","import { Component, OnInit,Output, Input, EventEmitter } from '@angular/core';\nimport {AuthenticationService} from '../services/loginservice';\nimport {HttpRequestService} from '../services/httpsevice.service';\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.css']\n})\nexport class DisplayComponent implements OnInit {\n  private usernameList:string[]=undefined;\n  public usernameStatus:boolean=true; \n  public userList:any[];\n   @Output('adminDeleteEvent') adminDel=new EventEmitter<{id:number}>();\n   @Input('id') adminId:number;\n   public dataLoaded:boolean=false;\n   public updateFlag:boolean=false;\n   public toUpdate:any;\n   public add:boolean=false;\n   public username:string;\n  constructor(private credentials:AuthenticationService,private httpHandle:HttpRequestService){\n    this.userList=[\n  ]\n  }\n  ngOnInit() {\n   \n    var url;\n    if(this.adminId==undefined)\n    this.adminId=this.credentials.userInfo.UID;\n    url = `users/1/${this.adminId}`;\n    this.httpHandle.getData(url,{id: this.credentials.getToken.id,\n      token: this.credentials.getToken.token\n   });\n  \n   this.httpHandle.callComplete.subscribe((data)=>{\n    \n    this.userList = data.result;\n     this.dataLoaded=true;\n   });\n\n    \n  }\n  update(event:any)\n  {\n     var id =event.target.getAttribute('id');\n   \n     this.toUpdate=this.userList[id];\n \n     this.updateFlag=true;\n  }\n  perform(event:any)\n  {\n    \n    if(event.update)\n     this.updateFlag=false;\n\n    var url=\"modifyUser\";\n    this.httpHandle.postRequestWithCredentials(url,{\n      id:this.credentials.getToken.id,\n      token:this.credentials.getToken.token}\n    ,event).subscribe((data)=>{\n   \n      var url = `users/1/${this.adminId}`;\n      this.httpHandle.getData(url,{id: this.credentials.getToken.id,\n        token: this.credentials.getToken.token\n     });\n    \n     this.httpHandle.callComplete.subscribe((data)=>{\n       \n      this.userList = data.result;\n       this.dataLoaded=true;\n     });\n    });\n   \n  \n  }\n  delete(event:any)\n  {\n    var id =parseInt(event.target.getAttribute('id'));\n    this.perform({type:0,\n      id : id\n    });\n    if(event.target.hasAttribute('t'))\n    this.adminDel.emit({id:this.adminId});\n }\n addUser(event)\n {\n   this.add=!this.add;\n }\n addNewUser(formValue)\n {\n \n\n   this.add=!this.add;\n \n   formValue.aid=this.adminId;\n   formValue.role=\"user\"; \n   this.httpHandle.postRequestWithCredentials(\"users\",{\n     id : this.credentials.getToken.id,\n     token: this.credentials.getToken.token\n   },formValue).subscribe((data)=>{\n   \nvar url = `users/1/${this.adminId}`;\n    this.httpHandle.getData(url,{id: this.credentials.getToken.id,\n      token: this.credentials.getToken.token\n   });\n  \n   this.httpHandle.callComplete.subscribe((data)=>{\n     \n    this.userList = data.result;\n     this.dataLoaded=true;\n   });\n});\n }\n haze(event)\n {\n\n   this.usernameStatus=true;\n   if(this.usernameList==undefined)\n   this.httpHandle.getUserList('users/0/1',{\n     id: this.credentials.getToken.id,\n     token : this.credentials.getToken.token\n   }).subscribe((data:any)=>{\n       \n        this.usernameList=data.result.map(element=>element.username);\n         if(this.usernameList.indexOf(this.username)!=-1)\n           this.usernameStatus=false;\n     });\n   else\n    {\n     if(this.usernameList.indexOf(this.username)!=-1)\n     this.usernameStatus=false;\n    }\n }\n\n}\n","module.exports = \" *\\n {\\n     margin: 0px;\\n     padding:0px;\\n }\\n .main\\n{\\n    position:absolute;\\n    width:100%;\\n    height:100%;\\n\\tmargin: 0;\\n\\tpadding: 0;\\n    background: url('bg.jpg');\\n    opacity: 1.0;\\n\\tbackground-size: cover;\\n\\tfont-family: sans-serif;\\n}\\n .loginBox\\n{\\n\\tposition: absolute;\\n\\ttop: 50%;\\n\\tleft: 50%;\\n\\t-webkit-transform: translate(-50%,-50%);\\n\\t        transform: translate(-50%,-50%);\\n\\twidth: 350px;\\n\\theight: 420px;\\n\\tpadding: 80px 40px;\\n\\tbox-sizing: border-box;\\n\\tbackground: rgba(0,0,0,.5);\\n}\\n .user\\n{\\n\\twidth: 100px;\\n\\theight: 100px;\\n\\tborder-radius: 50%;\\n\\toverflow: hidden;\\n\\tposition: absolute;\\n\\ttop: calc(-100px/2);\\n\\tleft: calc(50% - 50px);\\n}\\n h2\\n{\\n\\tmargin: 0;\\n\\tpadding: 0 0 20px;\\n\\tcolor: #efed40;\\n\\ttext-align: center;\\n}\\n .loginBox p\\n{\\n\\tmargin: 0;\\n\\tpadding: 0;\\n\\tfont-weight: bold;\\n\\tcolor: #fff;\\n}\\n .loginBox input\\n{\\n\\twidth: 100%;\\n\\tmargin-bottom: 20px;\\n}\\n .loginBox input[type=\\\"text\\\"],\\n.loginBox input[type=\\\"password\\\"]\\n{\\n\\tborder: none;\\n\\tborder-bottom: 1px solid #fff;\\n\\tbackground: transparent;\\n\\toutline: none;\\n\\theight: 40px;\\n\\tcolor: #fff;\\n\\tfont-size: 16px;\\n}\\n ::-webkit-input-placeholder\\n{\\n\\tcolor: rgba(255,255,255,.5);\\n}\\n ::-ms-input-placeholder\\n{\\n\\tcolor: rgba(255,255,255,.5);\\n}\\n ::placeholder\\n{\\n\\tcolor: rgba(255,255,255,.5);\\n}\\n .loginBox input[type=\\\"submit\\\"]\\n{\\n\\tborder: none;\\n\\toutline: none;\\n\\theight: 40px;\\n\\tcolor: #fff;\\n\\tfont-size: 16px;\\n\\tbackground: #ff267e;\\n\\tcursor: pointer;\\n\\tborder-radius: 20px;\\n}\\n .loginBox input[type=\\\"submit\\\"]:hover\\n{\\n\\tbackground: #efed40;\\n\\tcolor: #262626;\\n}\\n .loginBox a\\n{\\n\\tcolor: #fff;\\n\\tfont-size: 14px;\\n\\tfont-weight: bold;\\n\\ttext-decoration: none;\\n}\\n #myNav\\n{\\n\\twidth:100%;\\n}\\n .overlay {\\n    height: 100%;\\n    width: 0;\\n    position: fixed;\\n    z-index: 1;\\n    top: 0;\\n    left: 0;\\n    background-color: rgb(0,0,0);\\n    background-color: rgba(0,0,0, 0.9);\\n    overflow-x: hidden;\\n    transition: 0.5s;\\n}\\n .overlay-content {\\n\\tcolor:white;\\n\\tfont-family: 'Courier New', Courier, monospace;\\n\\tfont-size:20px;\\n    position: absolute;\\n\\ttop: 10%;\\n\\tleft:0%;\\n    width: 100%;\\n    text-align: left;\\n    margin-top: 30px;\\n}\\n .overlay a {\\n    padding: 8px;\\n    text-decoration: none;\\n    font-size: 36px;\\n    color: #818181;\\n    display: block;\\n    transition: 0.3s;\\n}\\n .overlay a:hover, .overlay a:focus {\\n    color: #f1f1f1;\\n}\\n .overlay .closebtn {\\n    position: absolute;\\n    top: 20px;\\n    right: 45px;\\n    font-size: 60px;\\n}\\n @media screen and (max-height: 450px) {\\n  .overlay a {font-size: 20px}\\n  .overlay .closebtn {\\n    font-size: 40px;\\n    top: 15px;\\n    right: 35px;\\n  }\\n}\\n .container {\\n    position: relative;\\n    width: 50%;\\n}\\n .image {\\n  opacity: 1;\\n  display: block;\\n  width: 100%;\\n  height: auto;\\n  transition: .5s ease;\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n}\\n .middle {\\n  transition: .5s ease;\\n  opacity: 0;\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  -ms-transform: translate(-50%, -50%);\\n  text-align: center;\\n}\\n .container:hover .image {\\n  opacity: 0.3;\\n}\\n .container:hover .middle {\\n  opacity: 1;\\n}\\n .text {\\n  background-color: #4CAF50;\\n  color: white;\\n  font-size: 16px;\\n  padding: 16px 32px;\\n}\"","module.exports = \"\\n<div class=\\\"main\\\">\\n  <div class=\\\"loginBox\\\">\\n    <img src=\\\"../../assets/user.png\\\" class=\\\"user\\\">\\n    <h2>Log In Here</h2>\\n    <form>\\n      <p>Username</p>\\n      <input [(ngModel)]=\\\"username\\\" type=\\\"text\\\" name=\\\"uname\\\" placeholder=\\\"Enter Username\\\" required>\\n      <p>Password</p>\\n      <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"pass\\\" placeholder=\\\"••••••\\\" required>\\n      <input (click)=\\\"onSubmit($event)\\\" type=\\\"submit\\\" name=\\\"\\\" value=\\\"Sign In\\\">\\n    </form>\\n  </div>\\n</div>\\n\\n\\n<div id=\\\"myNav\\\" class=\\\"overlay\\\" *ngIf=\\\"displayInfo\\\">\\n    <a href=\\\"javascript:void(0)\\\" class=\\\"closebtn\\\" (click)=\\\"closeNav()\\\">&times;</a>\\n    <div class=\\\"overlay-content\\\">\\n     <div style=\\\"color:red;\\n     font-size: 20px;\\n     text-decoration: underline;\\n     \\\">INSTRUCTIONS:</div>\\n   \\n \\n\\n  \\n        <ul>\\n          <li><p class=\\\"alert alert-danger\\\">To test SuperAdmin use:</p>\\n             <br>\\n             Username:buddha\\n             <br>\\n             Password:buddha\\n          </li>\\n          <li><p class=\\\"alert alert-danger\\\">To test Admin use:</p>\\n              <br>\\n              Username:dalailama\\n              <br>\\n              Password:dalailama\\n           </li>\\n           <li><p class=\\\"alert alert-danger\\\">To test User use:</p>\\n              <br>\\n              Username:krishna\\n              <br>\\n              Password:krishna\\n           </li>\\n        </ul>\\n        <br>\\n        <div style=\\\"color:red;\\n        font-size: 20px;\\n        text-decoration: underline;\\n        \\\">Project Description:</div>\\n     <p style=\\\"margin:0px;padding:0px;\\\">\\n        Project is build using Angular and Node. I have used sqlite3 for database as it is lightweight. \\n        The database consists of all the required fields.I have kept username as UNIQUE constraint and users who enter same username in registration or update forms are \\n        given message to change their value when the username is found in DB.I have used express middleware for validation each request after the first login is completed.\\n        After the first login the client is given a token which Angular stores in localstorage and every subsequent requests need this token for accessing the sever.\\n      </p>\\n        <br>\\n      <p style=\\\"margin:0px;padding:0px;\\\">\\n        The frontend consists of 7 components and 2 services.The frontend uses routes are protected with Route guard.\\n        There are services for httpRequest and Authentication.Forms are validated using Template Driven Approach.\\n         <br>\\n         <br>\\n         <br>\\n         <br>\\n        </p>\\n\\n        <div style=\\\"color:red;\\n        font-size: 20px;\\n        text-decoration: underline;\\n        \\\">Screenshots:</div>\\n        \\n\\n         \\n\\n         <div class=\\\"container\\\">\\n            <img src=\\\"../../assets/frontpage.png\\\" alt=\\\"Avatar\\\" class=\\\"image\\\" style=\\\"width:100%\\\">\\n            <div class=\\\"middle\\\">\\n              <div class=\\\"text\\\">Front Page</div>\\n            </div>\\n          </div>\\n    \\n\\n    <div class=\\\"container\\\">\\n        <img src=\\\"../../assets/superadmin.png\\\" alt=\\\"Avatar\\\" class=\\\"image\\\" style=\\\"width:100%\\\">\\n        <div class=\\\"middle\\\">\\n          <div class=\\\"text\\\">SuperAdmin page</div>\\n        </div>\\n      </div>\\n\\n\\n\\n<div class=\\\"container\\\">\\n    <img src=\\\"../../assets/superadmin1.png\\\" alt=\\\"Avatar\\\" class=\\\"image\\\" style=\\\"width:100%\\\">\\n    <div class=\\\"middle\\\">\\n      <div class=\\\"text\\\">SuperAdmin Dashboard</div>\\n    </div>\\n  </div>\\n\\n\\n<div class=\\\"container\\\">\\n    <img src=\\\"../../assets/usernameduplicate.png\\\" alt=\\\"Avatar\\\" class=\\\"image\\\" style=\\\"width:100%\\\">\\n    <div class=\\\"middle\\\">\\n      <div class=\\\"text\\\">Username constraint</div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container\\\">\\n      <img src=\\\"../../assets/user1.png\\\" alt=\\\"Avatar\\\" class=\\\"image\\\" style=\\\"width:100%\\\">\\n      <div class=\\\"middle\\\">\\n        <div class=\\\"text\\\">User Dashboard</div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"container\\\">\\n        <img src=\\\"../../assets/accessdenied.png\\\" alt=\\\"Avatar\\\" class=\\\"image\\\" style=\\\"width:100%\\\">\\n        <div class=\\\"middle\\\">\\n          <div class=\\\"text\\\">Access Denied</div>\\n        </div>\\n      </div>\\n\\n    \\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport { AuthenticationService} from '../services/loginservice';\n@Component({\n  selector: 'app-front',\n  templateUrl: './front.component.html',\n  styleUrls: ['./front.component.css']\n})\nexport class FrontComponent implements OnInit {\n  private username:string;\n  private password:string;\n  constructor(private auth:AuthenticationService, private router:Router) { }\n  public displayInfo:boolean=true;\n  ngOnInit() {\n\n   \n  }\n  onSubmit(event)\n  {\n    event.preventDefault();\n    this.auth.authorizeUser(this.username,this.password);\n    this.auth.authenticatedEvent.subscribe((data:any)=>{\n       if(data==\"ACCESS DENIED\")\n       alert(\"ACCESS DENIED INVALID CREDENTIALS\");\n       else\n       this.router.navigate(['/dashboard']);\n    });\n  }\n\nngOnDestroy(){\n  \n}\ncloseNav()\n{\n  this.displayInfo=false;\n}\n}\n","module.exports = \".navbar {\\n    width: 100%;\\n    background-color: #555;\\n    overflow: auto;\\n  }\\n  \\n  .navbar a {\\n    float: left;\\n    padding: 12px;\\n    color: white;\\n    text-decoration: none;\\n    font-size: 17px;\\n  }\\n  \\n  .navbar a:hover {\\n    background-color: #000;\\n  }\\n  \\n  .active {\\n    background-color: #4CAF50;\\n  }\\n  \\n  @media screen and (max-width: 500px) {\\n    .navbar a {\\n      float: none;\\n      display: block;\\n    }\\n  }\\n  \\n  .haze\\n  {\\n      position:absolute;\\n      right: 0px;\\n      background: lightcoral; \\n  }\\n\\n\\n\\n  \"","module.exports = \"<div class=\\\"navbar\\\">\\n    <div class=\\\"navbar-header\\\">\\n        <a class=\\\"navbar-brand\\\">TEST PROJECT</a>\\n      </div>\\n  <a routerLinkActive=\\\"active\\\"  [routerLink]=\\\"['/dashboard']\\\"><i class=\\\"fa fa-fw fa-home\\\"></i> Home</a> \\n  <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/adminuser']\\\" *ngIf=\\\"type==='admin'\\\" ><i class=\\\"fa fa-fw fa-user\\\"></i> Users</a>\\n  <a routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/superadmin']\\\" *ngIf=\\\"type==='superadmin'\\\" ><i class=\\\"fa fa-fw fa-user\\\"></i> Admins</a>\\n    <a  class=\\\"btn btn-info btn-lg haze\\\"\\n    (click)=\\\"logoutUser()\\\"\\n    >\\n        <span class=\\\"glyphicon glyphicon-log-out\\\"></span> Log out\\n      </a>\\n    \\n    \\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-navigationbar',\n  templateUrl: './navigationbar.component.html',\n  styleUrls: ['./navigationbar.component.css']\n})\nexport class NavigationbarComponent implements OnInit {\n @Input('type') type:string;\n @Output() logout=new EventEmitter<any>();\n  constructor(private router:Router) {\n   }\n  logoutUser()\n  {\n    this.logout.emit({logout:true});\n  }\n  ngOnInit() {\n  }\n\n}\n","import {HttpClient} from '@angular/common/http';\nimport { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable()\nexport class HttpRequestService {\n \n    private completeUrl:string;\n    private baseUrl:string=\"/\";\n    callComplete = new EventEmitter<any>();\n    callComplete1 = new EventEmitter<any>();\n    constructor(private httpclient:HttpClient)\n    {\n    }\n\n    public getData1(url,credentials)\n    {\n     \n       this.completeUrl=this.baseUrl+url+`?id=${credentials.id}&token=${credentials.token}`;\n       this.httpclient.get(this.completeUrl).subscribe((data:any)=>{\n      \n          if(data.statusCode != 200 )\n          {\n            this.callComplete1.emit({\n              responseId:1,\n              type:'faliure',\n              code:data.statusCode,\n              result : []\n            });\n          }\n          else\n          {\n            this.callComplete1.emit({\n              responseId:1,\n              type:'success',\n              code:data.statusCode,\n              result : data.result\n            });\n          }\n       });\n\n    }\n\n    public getData(url,credentials)\n    {\n     \n     \n       this.completeUrl=this.baseUrl+url+`?id=${credentials.id}&token=${credentials.token}`;\n \n       this.httpclient.get(this.completeUrl).subscribe((data:any)=>{\n\n      \n          if(data.statusCode != 200 )\n          {\n            this.callComplete.emit({\n              responseId:1,\n              type:'faliure',\n              code:data.statusCode,\n              result : []\n            });\n          }\n          else\n          {\n            this.callComplete.emit({\n              responseId:1,\n              type:'success',\n              code:data.statusCode,\n              result : data.result\n            });\n          }\n       });\n\n    }\n   public postRequest(url,body)\n   {\n      url=\"/\"+url;\n     return this.httpclient.post(url,body)\n   }\n   public postRequestWithCredentials(url,credentials,body)\n   {\n     \n    this.completeUrl=`/modifyUser?id=${credentials.id}&token=${credentials.token}`;\n    if(url!=undefined)\n    this.completeUrl=`/${url}?id=${credentials.id}&token=${credentials.token}`;\n    return this.httpclient.post(this.completeUrl,body);\n   }\n   getUserList(url,credentials)\n   {\n    \n      this.completeUrl=\"/\"+url+`?id=${credentials.id}&token=${credentials.token}`;\n       return this.httpclient.get(this.completeUrl);  \n    \n  }\n }\n\n","import { Injectable, EventEmitter } from \"@angular/core\";\nimport { HttpRequestService } from \"./httpsevice.service\";\n\n\n\n@Injectable()\nexport class AuthenticationService\n{\n    authenticatedEvent= new EventEmitter<any>();\n     authenticated:boolean=false;\n     userInfo:any={};\n     \n    constructor(private httpHandle:HttpRequestService){\n    }\n\n    get getToken():any{\n        return {token : window.sessionStorage.getItem('token'),\n            id:window.sessionStorage.getItem('id')};\n    }\n\n    authorizeUser(username:string,password:string){\n      this.httpHandle\n      .postRequest('authorize',{username:username,password:password}).subscribe((data:any)=>{\n        \n        if(data.statusCode==200)\n          { \n             \n              this.setToken(data.token,data.id);\n              this.authenticated=true;\n              this.userInfo=data.userInfo;\n              this.authenticatedEvent.emit(this.userInfo);\n          }\n          else\n          {\n              this.authenticatedEvent.emit(\"ACCESS DENIED\");\n          }\n      });\n     }\n     setToken(token,id)\n     {\n         this.authenticated=true;\n         window.sessionStorage.clear(); \n         window.sessionStorage.setItem('token',token);\n         window.sessionStorage.setItem('id',id);\n     }\n\n     destroySession()\n     {\n         this.authenticated=false;\n         window.sessionStorage.clear();\n         this.userInfo=undefined;\n     }\n     \n}","module.exports = \"input{\\n    width:250px;\\n    background:whitesmoke;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-3\\\">\\n  <h4>Current Values</h4>\\n <ul class=\\\"list-group\\\">\\n   <li class=\\\"list-group-item\\\" [type]=\\\"'firstname'\\\">FirstName:  {{user.firstname}}\\n       <button (click)=\\\"updateSingle($event)\\\" class=\\\"btn btn-primary\\\">EDIT</button>\\n \\n   </li>\\n   <li  [type]=\\\"'lastname'\\\" class=\\\"list-group-item\\\">LastName: {{user.lastname}}\\n       <button (click)=\\\"updateSingle($event)\\\" class=\\\"btn btn-primary\\\">EDIT</button>\\n   </li>\\n   <li class=\\\"list-group-item\\\"  [type]=\\\"'username'\\\">UserName: {{user.username}}\\n       <button (click)=\\\"updateSingle($event)\\\" class=\\\"btn btn-primary\\\">EDIT</button>\\n   </li>\\n   <li class=\\\"list-group-item\\\"  [type]=\\\"'password'\\\">Password: *********\\n       <button (click)=\\\"updateSingle($event)\\\" class=\\\"btn btn-primary\\\">EDIT</button>\\n   </li>\\n </ul>\\n    </div>\\n    <div class=\\\"col-xs-9\\\" #editbox>\\n       <h4>PLEASE FILL THE FIELDS TO UPDATE AND LEAVE BLANK FOR OTHERS:</h4> \\n     <div *ngIf=\\\"!singleEdit else single\\\">\\n \\n         <form #userform=\\\"ngForm\\\" (ngSubmit)=\\\"haze($event)\\\">\\n           <div class=\\\"form-group\\\">\\n             <label for=\\\"fname\\\">FirstName:</label>\\n             <input required name=\\\"fname\\\" required [(ngModel)]=\\\"firstname\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fname\\\">\\n           </div>\\n           <div class=\\\"form-group\\\">\\n             <label for=\\\"lname\\\">LastName:</label>\\n             <input required name=\\\"lname\\\" type=\\\"text\\\" [(ngModel)]=\\\"lastname\\\" class=\\\"form-control\\\" id=\\\"lname\\\">\\n           </div>\\n           <div class=\\\"form-group\\\">\\n               <label for=\\\"uname\\\">UserName:</label>\\n               <input (keyup)=\\\"haze1($event)\\\"  required  name=\\\"uname\\\" type=\\\"text\\\" [(ngModel)]=\\\"username\\\" class=\\\"form-control\\\" id=\\\"uname\\\">\\n             <div [hidden]=\\\"usernameStatus\\\" class=\\\"alert alert-danger\\\">\\n               Sorry Username exists  in our Database\\n             </div>\\n              </div>\\n             <div class=\\\"form-group\\\">\\n                 <label for=\\\"pwd\\\">Password:</label>\\n                 <input required name=\\\"pwd\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\"  class=\\\"form-control\\\" id=\\\"lname\\\">\\n               </div>\\n            \\n         \\n           <button [disabled]=\\\"!(userform.valid && usernameStatus)\\\"  type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n         </form> \\n      \\n      </div>\\n    </div>\\n  </div>  \\n </div>\\n <ng-template #single>\\n   <form #singleForm=\\\"ngForm\\\" (ngSubmit)=\\\"haze(singleForm.value)\\\"><h4 class=\\\"text text-primary\\\"> Enter new value for {{field}} </h4> <div class=\\\"form-group\\\">\\n     <label for=\\\"\\\"></label>\\n     \\n     <input *ngIf=\\\"field!=='username'\\\" required  [type]=\\\"field=='password'?'password':'text'\\\" ngModel name=\\\"value\\\" class=\\\"form-control\\\">\\n     <input *ngIf=\\\"field=='username'\\\" (keyup)=\\\"haze1($event)\\\"  required  name=\\\"value\\\" type=\\\"text\\\" [(ngModel)]=\\\"username\\\" required class=\\\"form-control\\\" >\\n             <div [hidden]=\\\"usernameStatus\\\" class=\\\"alert alert-danger\\\">\\n               Sorry Username exists  in our Database\\n             </div>\\n    </div>\\n   <button type=\\\"submit\\\" [disabled]=\\\"!(singleForm.valid && usernameStatus)\\\"  class=\\\"btn btn-primary\\\">Submit</button>\\n   </form>\\n </ng-template>\\n \\n \"","import { Component, OnInit,Input, ViewChild, ElementRef, Output, EventEmitter} from '@angular/core';\nimport {HttpRequestService} from \"../services/httpsevice.service\";\nimport {AuthenticationService} from '../services/loginservice';\n\n@Component({\n  selector: 'app-useredit',\n  templateUrl: './useredit.component.html',\n  styleUrls: ['./useredit.component.css']\n})\nexport class UsereditComponent implements OnInit {\n   @Input('toEdit') user:any;\n   @ViewChild('editbox') editbox:ElementRef;\n   @Output() dbEvent = new EventEmitter<any>();\n   public singleEdit:boolean;\n   public field:string;\n   private usernameList:string[]=undefined;\n   public usernameStatus:boolean=true;\n   public firstname:string;\n   public lastname:string;\n   public username:string;\n   public password:string;\n\n\n  public value:string;\n \n  constructor(private httpHandle:HttpRequestService,private credentials:AuthenticationService) {\n    this.singleEdit=false;\n  }\n\n  ngOnInit() {\n  }\n updateSingle(event)\n {\n   \n   this.singleEdit=true;\n   this.field= event.target.parentElement.getAttribute('type');\n }\n\n\nhaze(formValue)\n{\n if(this.singleEdit)\n {\n \n  var obj ={};\n  obj[this.field]=formValue.value;\n  obj[\"type\"]=1;\n  obj[\"id\"]=this.user.UID;\n  obj[\"update\"]=true;\n  this.dbEvent.emit(obj);\n }\n else\n {\nthis.dbEvent.emit({\n     update: true,\n     type : 1,\n     id:this.user.UID,\n     firstname: this.firstname,\n     lastname: this.lastname,\n     username: this.username,\n     password: this.password,\n     })\n }\n}\nhaze1(event)\n{\n\n  this.usernameStatus=true;\n  if(this.usernameList==undefined)\n  this.httpHandle.getUserList('users/0/1',{\n    id: this.credentials.getToken.id,\n    token : this.credentials.getToken.token\n  }).subscribe((data:any)=>{\n      \n       this.usernameList=data.result.map(element=>element.username);\n        if(this.usernameList.indexOf(this.username)!=-1)\n          this.usernameStatus=false;\n    });\n  else\n   {\n    if(this.usernameList.indexOf(this.username)!=-1)\n    this.usernameStatus=false;\n   }\n}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}